version: "3.8"

include:
  #------------------------------------------
  - admin-panel/admin-panel.yml
  - databases/databases.yml

  #-----------------servises-----------------
  - services-composes/accounts_service/accounts_service.yml
  - services-composes/profiles_service/profiles_service.yml
  - services-composes/email_service/email_service.yml
  - services-composes/images_storage_service/images_storage_service.yml
  - services-composes/image_processing_service/image_processing_service.yml
  - services-composes/movies_persons_service/movies_persons_service.yml
  - services-composes/movies_service/movies_service.yml
  - services-composes/casts_service/casts_service.yml
  - services-composes/cinema_service/cinema_service.yml
  - services-composes/cinema_orders_service/cinema_orders_service.yml
  #-----------------brokers-----------------
  - services-composes/kafka-cluster/kafka-cluster.yml

  #-----------------metrics-----------------
  - services-composes/tracing_service/tracing_service.yml

networks:
  gateway_network:
    driver: bridge
    name: "gateway_network"

services:
  gateway:
    image: nginx
    hostname: gateway
    ports:
      - 8000:80
      - 44300:443
      - 8082:82
    networks:
      - gateway_network
    volumes:
      - .nginx/configs/:/etc/nginx/
      - ./certs:/certs/:ro
    deploy:
      restart_policy:
        condition: unless-stopped
    depends_on:
      #-----------------services-----------------
      accounts_service:
        condition: service_healthy
      profiles_service:
        condition: service_healthy
      email_service:
        condition: service_started
      images_storage_service:
        condition: service_started
      image_processing_service:
        condition: service_started
      movies_persons_service:
        condition: service_healthy
      movies_service:
        condition: service_healthy
      casts_service: 
        condition: service_healthy
      cinema_service:
        condition: service_healthy
      cinema_orders_service:
        condition: service_healthy
      #------------------------------------------
      prometheus:
        condition: service_started
      jaeger:
        condition: service_started
      users_nginx_exporter:
        condition: service_started
      grafana:
        condition: service_started
      kafka-ui:
        condition: service_started
      loki:
        condition: service_started
      promtail: 
        condition: service_started
      #------------------------------------------
      watchtower:
        condition: service_started
      admin_gateway:
        condition: service_started
      pg_admin:
        condition: service_started
        
  watchtower:
    image: containrrr/watchtower
    command: --interval 60
    environment:
      WATCHTOWER_LIFE_CYCLE_HOOKS: 1
      WATCHTOWER_NOTIFICATION: shoutrrr
      WATCHTOWER_NOTIFICATION_URL: ${NOTIFICATION_URL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      restart_policy:
        condition: unless-stopped
