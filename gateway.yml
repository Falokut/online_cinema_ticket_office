version: "3.8"

include:
  #-----------------databases-----------------
  - databases/accounts_db/accounts_db.yml
  - databases/movies_db/movies_db.yml
  - databases/profiles_db/profiles_db.yml

  #-----------------servises-----------------
  - services-composes/accounts_service/accounts_service.yml
  - services-composes/profiles_service/profiles_service.yml
  - services-composes/email_service/email_service.yml
  - services-composes/images_storage_service/images_storage_service.yml
  - services-composes/image_processing_service/image_processing_service.yml

  #-----------------brokers-----------------
  - services-composes/kafka-cluster/kafka-cluster.yml

  #-----------------metrics-----------------
  - services-composes/tracing_service/tracing_service.yml

networks:
  gateway_network:

services:
  gateway:
    image: nginx
    hostname: gateway
    ports:
      - 80:80
      - 81:81
    networks:
      - profiles_service_network
      - accounts_service_network
      - images_storage_network
      - image_processing_service_network
      - gateway_network
    volumes:
      - .nginx/configs/:/etc/nginx/
    deploy:
      restart_policy:
        condition: unless-stopped
    depends_on:
      #-----------------services-----------------
      accounts_service:
        condition: service_healthy
      profiles_service:
        condition: service_healthy
      email_service:
        condition: service_started
      images_storage_service:
        condition: service_started
      image_processing_service:
        condition: service_started
      #------------------------------------------
      profiles_db:
        condition: service_started
      prometheus:
        condition: service_started
      jaeger:
        condition: service_started
      grafana:
        condition: service_started
      kafka-ui:
        condition: service_started
      #------------------------------------------
      watchtower:
        condition: service_started

  watchtower:
    image: containrrr/watchtower
    command: --interval 600
    environment:
      WATCHTOWER_LIFE_CYCLE_HOOKS: 1
      WATCHTOWER_NOTIFICATION: shoutrrr
      WATCHTOWER_NOTIFICATION_URL: ${NOTIFICATION_URL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
