version: "3.8"


networks:
 casts_db_network:
    name: "casts_db_network"

services:
 casts_db_master:
    restart: unless-stopped
    image: postgres:16.0-alpine3.18
    volumes:
      - ./.container_data/database/postgres/data:/var/lib/postgresql/data
      - ./db/:/docker-entrypoint-initdb.d
    expose:
      - 5432
    networks:
      - casts_db_network
    environment:
       PGDATA: /var/lib/postgresql/data
       POSTGRES_USER: ${POSTGRES_USER}
       PGUSER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
       POSTGRES_DB: casts
       SERVICE_NAME: casts_service
       SERVICE_PASSWORD: ${SERVICE_PASSWORD}
       ADMIN_SERVICE_PASSWORD: ${ADMIN_SERVICE_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

 casts_pool:
    image: bitnami/pgbouncer
    restart: unless-stopped
    expose:
      - 6432
    networks:
      - casts_db_network
      - databases_network
    environment:
      POSTGRESQL_HOST: casts_db_master
      PGBOUNCER_AUTH_TYPE: md5
      PGBOUNCER_DATABASE: casts
      POSTGRESQL_USERNAME: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD} 
    volumes:
      - ./docker/pgbouncer/pgbouncer.ini:/bitnami/pgbouncer/conf/pgbouncer.ini
      - ./docker/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    depends_on:
      casts_db_master:
        condition: service_healthy 