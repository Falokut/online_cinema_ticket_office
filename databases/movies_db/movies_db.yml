version: "3.8"


networks:
  movies_db_network:
    name: "movies_db_network"

services:
  movies_db_master:
    restart: unless-stopped
    image: postgres:16.0-alpine3.18
    volumes:
      - ./.container_data/database/postgres/data:/var/lib/postgresql/data
      - ./db/init-up.sql:/docker-entrypoint-initdb.d/init.up.sql
    expose:
      - 5432
    networks:
      - movies_db_network
    environment :
      - PGDATA=/var/lib/postgresql/data
      - POSTGRES_USER=${POSTGRES_USER}
      - PGUSER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=movies
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  movies_pool:
    image: bitnami/pgbouncer
    restart: unless-stopped
    expose:
      - 6432
    networks:
      - movies_db_network
      - databases_network
    environment:
      POSTGRESQL_HOST: movies_db_master
      PGBOUNCER_AUTH_TYPE: md5
      PGBOUNCER_DATABASE: movies
      POSTGRESQL_USERNAME: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker/pgbouncer/pgbouncer.ini:/bitnami/pgbouncer/conf/pgbouncer.ini
      - ./docker/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    depends_on:
      movies_db_master:
        condition: service_healthy