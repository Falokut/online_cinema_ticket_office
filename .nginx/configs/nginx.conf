
events {}


http {
  include services.conf;
  include rules.conf;
  proxy_cache_path /etc/nginx/cache keys_zone=images_cache:500m max_size=1000m;

  # RestAPI
  server {
    listen 80;
    client_max_body_size 2m;

    location /auth {
      internal;
      proxy_set_header X-Client-Ip $http_x_real_ip;
      proxy_pass_request_body off;
      auth_request_set $http_x_account_id $upstream_http_x_account_id;
      proxy_pass 'http://accounts-services/v1/account-id';
    }


    location /api/accounts-service/ {
      if ($request_method !~ ^(GET|POST|DELETE)$) { return 405; }
      proxy_pass 'http://accounts-services/v1/';
      proxy_set_header X-Client-Ip $http_x_real_ip; 
    }

    location /api/profiles-service/ {
      if ($request_method !~ ^(GET|POST|PATCH)$) { return 405; }
      auth_request_set $http_x_account_id $upstream_http_x_account_id;
      proxy_set_header X-Account-Id $http_x_account_id;
      proxy_hide_header X-Client-Ip;
      proxy_hide_header X-Session-Id;
      proxy_hide_header X-Real-Ip;
      auth_request /auth;
      proxy_pass 'http://profiles-services/v1/';
    }

    location /api/images-service/ {
      if ($request_method !~ ^(GET|POST|DELETE)$) { return 405; }
      proxy_pass 'http://images-storage-services/v1/';
    }

    location /image/ {
      proxy_cache images_cache;
      if ($request_method !~ ^(GET)$) { return 405; }
      proxy_pass 'http://images-storage-services/v1/image/';
    }
  }

  #GRPC
  server {
    listen 81;
    http2  on;
    client_max_body_size 3m;

    location /images_storage_service.ImagesStorageServiceV1/ {
      grpc_pass grpc://images-storage-services;
    }
    location /images_storage_service.ImagesStorageServiceV1/GetImage {
      proxy_cache images_cache;
      grpc_pass grpc://images-storage-services;
    }

    location /accounts_service.accountsServiceV1/ {
      grpc_set_header X-Client-Ip $http_x_real_ip; 
      grpc_pass grpc://accounts-services;
    }
    
    location /profiles_service.profilesServiceV1/ {
      auth_request_set $http_x_account_id $upstream_http_x_account_id;
      grpc_set_header X-Account-Id $http_x_account_id;
      grpc_set_header X-Client-Ip $http_x_real_ip; 
      grpc_hide_header X-Client-Ip;
      grpc_hide_header X-Session-Id;
      grpc_hide_header X-Real-Ip;
      auth_request /auth;
      grpc_pass grpc://profiles-services;
    }


    location /auth {
      internal;
      proxy_set_header X-Client-Ip $http_x_real_ip;
      proxy_pass_request_body off;
      auth_request_set $http_x_account_id $upstream_http_x_account_id;
      proxy_pass 'http://accounts-services/v1/account-id';
    }
  }
}

