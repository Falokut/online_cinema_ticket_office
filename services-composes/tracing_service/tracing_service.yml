version: '3.8'

networks:
  tracing_network:
    name: "tracing_network"


services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./docker/containers-configs/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./.container_data/prometheus/:/prometheus
    deploy:
      restart_policy:
        condition: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - tracing_network
    depends_on:
      - cadvisor
    labels:
      org.label-schema.group: "monitoring"
      
  users_nginx_exporter:
    image: nginx/nginx-prometheus-exporter
    environment:
      SCRAPE_URI: http://gateway:8080/stub_status
    ports:
    - 9113:9113
    networks:
      - tracing_network
      - gateway_network
    labels:
      org.label-schema.group: "monitoring"

  jaeger:
    image: jaegertracing/all-in-one:1.21
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
      - tracing_network
    deploy:
      restart_policy:
        condition: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    command:
      - --housekeeping_interval=30s
      - --port=9102
    ports:
    - 9102:9102
    networks:
      - tracing_network
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      update_config:
        order: stop-first
      resources:
        reservations:
          memory: 80M
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9102/healthz || exit 1
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 30s
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    environment:
    - GF_PATHS_DATA=/var/lib/grafana
    volumes:
      - ./grafana/data:/var/lib/grafana/
    ports:
      - 3000:3000
    networks:
     - tracing_network
    deploy:
      restart_policy:
        condition: unless-stopped

  loki:
    image: grafana/loki
    hostname: loki
    ports:
      - 3100:3100
    volumes:
      - ./docker/containers-configs/loki/:/mnt/config
    command: -config.file=/mnt/config/loki-config.yaml
    networks:
      - tracing_network

  promtail:
    image: grafana/promtail
    volumes:
      - ./docker/containers-configs/promtail:/mnt/config
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/mnt/config/promtail-config.yaml
    networks:
      - tracing_network