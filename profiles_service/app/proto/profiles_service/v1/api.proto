syntax= "proto3";


package profiles_service;
import "messages.proto";
option go_package = "profiles_service/v1/protos";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    schemes: HTTP;
    //schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";

    info: {
        title: "Profiles service";
        version: "1.0";
        contact: {
            name: "Falokut";
            url: "https://github.com/Falokut";
            email: "timur.sinelnik@yandex.ru";
        };
    }
    responses: {
        key: "403"
            value: {
                description: "Returned when the user does not have permission to access the resource."
                schema: {
                    json_schema: {
                        type: STRING;
                    }
                }
            }
    };
    responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					ref: "#/definitions/rpcStatus";
				}
			}
		}
	}
    responses: {
		key: "500";
		value: {
			description: "Something went wrong.";
			schema: {
				json_schema: {
					ref: "#/definitions/rpcStatus";
				}
			}
		}
	}
};

service profileServiceV1 {
    rpc GetUserProfile(GetUserProfileRequest) returns(GetUserProfileResponce){
        option (google.api.http) = {
            get: "/v1/profile"
        };

        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            responses: {
                key: "404"
                    value: {
                        description: "Returned when account with specified id not found."
                    }
            }; 
        };
    }
    rpc UpdateProfilePictureID(UpdateProfilePictureIDRequest) returns(google.protobuf.Empty){
        option (google.api.http) = {
            patch: "/v1/profile/update-picture"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            responses: {
                key: "404"
                    value: {
                        description: "Returned when account with specified id not found."
                    }
            }; 
        };
    }
}

