syntax = "proto3";

package images_storage_service;
import "images_storage_service_v1_messages.proto";
option go_package = "images_storage_service/v1/protos";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  schemes : HTTP;
// schemes: HTTPS;
consumes : "application/json";
produces : "application/json";

info : {
title:
  "Images storage service";
version:
  "1.0";
contact: {
name:
  "Falokut";
url:
  "https://github.com/Falokut";
email:
  "timur.sinelnik@yandex.ru";
};
}
responses : {
key:
  "403" value : {
  description:
    "Returned when the user does not have permission to access the resource."
    schema : {
    json_schema: {
    type:
      STRING;
    }
    }
  }
};
responses : {
key:
  "404";
value: {
description:
  "Returned when the resource does not exist.";
schema: {
json_schema: {
ref:
  "#/definitions/rpcStatus";
}
}
}
}
responses : {
key:
  "500";
value: {
description:
  "Something went wrong.";
schema: {
json_schema: {
ref:
  "#/definitions/rpcStatus";
}
}
}
}
}
;

service ImagesStorageServiceV1 {
  rpc UploadImage(UploadImageRequest) returns (UploadImageResponce) {
    option (google.api.http) = {
      post : "/v1/upload-image"
      body : "*"
    };
  };
  rpc StreamingUploadImage(stream StreamingUploadImageRequest)
      returns (UploadImageResponce) {};
  rpc GetImage(ImageRequest) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get : "/v1/image"
    };
  };
  rpc IsImageExist(ImageRequest) returns (ImageExistResponce) {
    option (google.api.http) = {
      get : "/v1/check-image-existing"
    };
  };
  rpc DeleteImage(ImageRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/delete-image"
    };
  };

  rpc ReplaceImage(ReplaceImageRequest) returns (ReplaceImageResponce) {
    option (google.api.http) = {
      post : "/v1/replace-image"
      body : "*"
    };
  };
}