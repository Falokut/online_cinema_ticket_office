// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.24.3
// source: profiles_service_v1.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ProfilesServiceV1Client is the client API for ProfilesServiceV1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProfilesServiceV1Client interface {
	GetUserProfile(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserProfileResponce, error)
	UpdateProfilePicture(ctx context.Context, in *UpdateProfilePictureRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteProfilePicture(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetEmail(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetEmailResponce, error)
	CreateProfile(ctx context.Context, in *CreateProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DeleteProfile(ctx context.Context, in *DeleteProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type profilesServiceV1Client struct {
	cc grpc.ClientConnInterface
}

func NewProfilesServiceV1Client(cc grpc.ClientConnInterface) ProfilesServiceV1Client {
	return &profilesServiceV1Client{cc}
}

func (c *profilesServiceV1Client) GetUserProfile(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetUserProfileResponce, error) {
	out := new(GetUserProfileResponce)
	err := c.cc.Invoke(ctx, "/profiles_service.profilesServiceV1/GetUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceV1Client) UpdateProfilePicture(ctx context.Context, in *UpdateProfilePictureRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/profiles_service.profilesServiceV1/UpdateProfilePicture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceV1Client) DeleteProfilePicture(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/profiles_service.profilesServiceV1/DeleteProfilePicture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceV1Client) GetEmail(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetEmailResponce, error) {
	out := new(GetEmailResponce)
	err := c.cc.Invoke(ctx, "/profiles_service.profilesServiceV1/GetEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceV1Client) CreateProfile(ctx context.Context, in *CreateProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/profiles_service.profilesServiceV1/CreateProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceV1Client) DeleteProfile(ctx context.Context, in *DeleteProfileRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/profiles_service.profilesServiceV1/DeleteProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfilesServiceV1Server is the server API for ProfilesServiceV1 service.
// All implementations must embed UnimplementedProfilesServiceV1Server
// for forward compatibility
type ProfilesServiceV1Server interface {
	GetUserProfile(context.Context, *emptypb.Empty) (*GetUserProfileResponce, error)
	UpdateProfilePicture(context.Context, *UpdateProfilePictureRequest) (*emptypb.Empty, error)
	DeleteProfilePicture(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	GetEmail(context.Context, *emptypb.Empty) (*GetEmailResponce, error)
	CreateProfile(context.Context, *CreateProfileRequest) (*emptypb.Empty, error)
	DeleteProfile(context.Context, *DeleteProfileRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedProfilesServiceV1Server()
}

// UnimplementedProfilesServiceV1Server must be embedded to have forward compatible implementations.
type UnimplementedProfilesServiceV1Server struct {
}

func (UnimplementedProfilesServiceV1Server) GetUserProfile(context.Context, *emptypb.Empty) (*GetUserProfileResponce, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserProfile not implemented")
}
func (UnimplementedProfilesServiceV1Server) UpdateProfilePicture(context.Context, *UpdateProfilePictureRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProfilePicture not implemented")
}
func (UnimplementedProfilesServiceV1Server) DeleteProfilePicture(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProfilePicture not implemented")
}
func (UnimplementedProfilesServiceV1Server) GetEmail(context.Context, *emptypb.Empty) (*GetEmailResponce, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEmail not implemented")
}
func (UnimplementedProfilesServiceV1Server) CreateProfile(context.Context, *CreateProfileRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProfile not implemented")
}
func (UnimplementedProfilesServiceV1Server) DeleteProfile(context.Context, *DeleteProfileRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProfile not implemented")
}
func (UnimplementedProfilesServiceV1Server) mustEmbedUnimplementedProfilesServiceV1Server() {}

// UnsafeProfilesServiceV1Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProfilesServiceV1Server will
// result in compilation errors.
type UnsafeProfilesServiceV1Server interface {
	mustEmbedUnimplementedProfilesServiceV1Server()
}

func RegisterProfilesServiceV1Server(s grpc.ServiceRegistrar, srv ProfilesServiceV1Server) {
	s.RegisterService(&ProfilesServiceV1_ServiceDesc, srv)
}

func _ProfilesServiceV1_GetUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceV1Server).GetUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profiles_service.profilesServiceV1/GetUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceV1Server).GetUserProfile(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesServiceV1_UpdateProfilePicture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProfilePictureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceV1Server).UpdateProfilePicture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profiles_service.profilesServiceV1/UpdateProfilePicture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceV1Server).UpdateProfilePicture(ctx, req.(*UpdateProfilePictureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesServiceV1_DeleteProfilePicture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceV1Server).DeleteProfilePicture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profiles_service.profilesServiceV1/DeleteProfilePicture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceV1Server).DeleteProfilePicture(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesServiceV1_GetEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceV1Server).GetEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profiles_service.profilesServiceV1/GetEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceV1Server).GetEmail(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesServiceV1_CreateProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceV1Server).CreateProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profiles_service.profilesServiceV1/CreateProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceV1Server).CreateProfile(ctx, req.(*CreateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesServiceV1_DeleteProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceV1Server).DeleteProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profiles_service.profilesServiceV1/DeleteProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceV1Server).DeleteProfile(ctx, req.(*DeleteProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProfilesServiceV1_ServiceDesc is the grpc.ServiceDesc for ProfilesServiceV1 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProfilesServiceV1_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "profiles_service.profilesServiceV1",
	HandlerType: (*ProfilesServiceV1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserProfile",
			Handler:    _ProfilesServiceV1_GetUserProfile_Handler,
		},
		{
			MethodName: "UpdateProfilePicture",
			Handler:    _ProfilesServiceV1_UpdateProfilePicture_Handler,
		},
		{
			MethodName: "DeleteProfilePicture",
			Handler:    _ProfilesServiceV1_DeleteProfilePicture_Handler,
		},
		{
			MethodName: "GetEmail",
			Handler:    _ProfilesServiceV1_GetEmail_Handler,
		},
		{
			MethodName: "CreateProfile",
			Handler:    _ProfilesServiceV1_CreateProfile_Handler,
		},
		{
			MethodName: "DeleteProfile",
			Handler:    _ProfilesServiceV1_DeleteProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "profiles_service_v1.proto",
}
